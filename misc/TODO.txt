TODO:

GameGroup:
* Creating a GameGroup with a host User
* Adding Users
- Changing Rules
* Creating a Game with Rules, set of Users

Game:
* Creating a Game with Rules, set of Users
* Populating Game with Players
- Creating Board using information from Rules
- Creating a Piece each turn using information from Rules

Player:
* [Add a member for a set of controlled Cells]
* Receiving an Item when capturing a Cell

UserPlayer:

AIPlayer:
* Creating an AIPlayer with a "difficulty/strategy"
* Making a move using a given Piece/Board
	- Making strategic choices
	- Making choices about Items

Rules:
* Refactor to "Rule" abstract class, whose subclasses are used as dictionary keys?

PetriBoard:
- Creating Board using information from Rules
	- Set up board layout/Cells
	- Place Player's heads
	- Place Items for pickup
- Testing for validity of a move
- Testing for validity of a bite
* (Naively) placing a Piece
	- Performing captures/cleaning killed cells
* (Naively) using a bite
	- Cleaning killed cells

PetriBoardCell:
* Creating a Cell with an Item for pickup
* Giving an Item when captured

PetriPiece:
- Creating a Piece using information from Rules

PetriItem:
- Defining item attributes/behavior
